#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
int main(){
    int n, m, q;
    while (cin >> n >> m){
        vector<int> d(n), u(m), v(m), w(m);
        for (int i = 0; i<n; i++)cin >> d[i];
        for (int i = 0; i<m; i++)cin >> u[i] >> v[i] >> w[i];
        cin >> q;
        int x, y, tmp;
        for (int i = 0; i<q; i++){
            cin >> x >> y;
            if (x == y){
                cout << 0 << endl;
                continue;
            }
            x--, y--;
            //ll lmax = (ll)INT_MAX << 32 + INT_MAX;
            ll lmax=4611686016279904256;
            vector<ll> time(n, lmax);
            time[x] = 0;
            queue<int> q;
            q.push(x);
            while (q.size()){
                tmp = q.front();
                q.pop();
                if (tmp == y)continue;
                if (time[tmp] + d[tmp]<time[(tmp + 1) % n]){
                    time[(tmp + 1) % n] = time[tmp] + d[tmp];
                    q.push((tmp + 1) % n);
                }
                if (time[tmp] + d[(tmp - 1 + n) % n]<time[(tmp - 1 + n) % n]){
                    time[(tmp - 1 + n) % n] = time[tmp] + d[(tmp - 1 + n) % n];
                    q.push((tmp - 1 + n) % n);
                }
                for (int i = 0; i<m; i++){
                    if (tmp == u[i]-1 && time[tmp] + w[i]<time[v[i]-1]){
                        time[v[i]-1] = time[tmp] + w[i];
                        q.push(v[i]-1);
                    }
                    if (tmp == v[i]-1 && time[tmp] + w[i]<time[u[i]-1]){
                        time[u[i]-1] = time[tmp] + w[i];
                        q.push(u[i]-1);
                    }
                }
            }
            cout << time[y] << endl;
        }
    }
}